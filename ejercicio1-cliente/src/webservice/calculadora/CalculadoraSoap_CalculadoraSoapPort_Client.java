
package webservice.calculadora;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;

/**
 * This class was generated by Apache CXF 3.1.0
 * 2015-05-28T12:59:11.540+02:00
 * Generated source version: 3.1.0
 * 
 */
public final class CalculadoraSoap_CalculadoraSoapPort_Client {

    private static final QName SERVICE_NAME = new QName("calculadora.webservice", "CalculadoraSoap");

    private CalculadoraSoap_CalculadoraSoapPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = CalculadoraSoap_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        CalculadoraSoap_Service ss = new CalculadoraSoap_Service(wsdlURL, SERVICE_NAME);
        CalculadoraSoap port = ss.getCalculadoraSoapPort();  
        
        {
        System.out.println("Invoking multiply...");
        float _multiply_a = 0.0f;
        float _multiply_b = 0.0f;
        float _multiply__return = port.multiply(_multiply_a, _multiply_b);
        System.out.println("multiply.result=" + _multiply__return);


        }
        {
        System.out.println("Invoking substract...");
        float _substract_a = 0.0f;
        float _substract_b = 0.0f;
        float _substract__return = port.substract(_substract_a, _substract_b);
        System.out.println("substract.result=" + _substract__return);


        }
        {
        System.out.println("Invoking divide...");
        float _divide_a = 0.0f;
        float _divide_b = 0.0f;
        float _divide__return = port.divide(_divide_a, _divide_b);
        System.out.println("divide.result=" + _divide__return);


        }
        {
        System.out.println("Invoking sum...");
        float _sum_a = 0.0f;
        float _sum_b = 0.0f;
        float _sum__return = port.sum(_sum_a, _sum_b);
        System.out.println("sum.result=" + _sum__return);


        }

        System.exit(0);
    }

}
